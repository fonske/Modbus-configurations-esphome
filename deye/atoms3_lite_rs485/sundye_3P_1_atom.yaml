substitutions:
  name: deye
  device_description: "Esphome component for Deye sun-sg04lp3"
  modbus_controller_id: sg04lp3

esphome:
  name: deye-esp32
  friendly_name: sun3p

esp32:
  board: esp32-s3-devkitc-1
  framework:
    type: arduino

# Enable/Disable logging
logger:
  logs:
    modbus_controller.sensor: DEBUG
    modbus_controller.output: DEBUG
    modbus.number: DEBUG
    esp32.preferences: DEBUG
    sensor: DEBUG
    text_sensor: DEBUG
    button: DEBUG
    number: DEBUG
    component: ERROR

# Enable Home Assistant API
api:
  reboot_timeout: 0s
#  encryption:
#    key: "1234omzUmVcVvuKfJaWBNIfuj/G3G3KvFGgQbkS5xXk="

ota:
#  password: "1234cea993cfbca3d9d808f9349cbbb0"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Deye-Esp32 Fallback Hotspot"
    password: "configesp"
    ap_timeout: 15s

captive_portal:

## Enable Web server.
web_server:
  port: 80

time:
  - platform: sntp
    id: sntp_time
    timezone: Europe/Amsterdam
    servers:
     - 0.pool.ntp.org
     - 1.pool.ntp.org
     - 2.pool.ntp.org

i2c:
  - id: bus_a
    sda: GPIO2
    scl: GPIO1

uart:
  id: mod_bus
  baud_rate: 9600
  stop_bits: 1
  tx_pin: GPIO6
  rx_pin: GPIO5
 
modbus:
  id: modbus1
# flow_control_pin: 4
 
modbus_controller:
  - id: ${modbus_controller_id}
    address: 0x1
    modbus_id: modbus1
    setup_priority: -10
    update_interval: 5sec
  
switch:
  - platform: modbus_controller
    use_write_multiple: true
    modbus_controller_id: ${modbus_controller_id}
    name: Solar_sell
    register_type: holding
    address: 145
    bitmask: 1
    entity_category: config
    icon: "mdi:toggle-switch"
 
  - platform: modbus_controller
    use_write_multiple: true
    modbus_controller_id: ${modbus_controller_id}
    name: Grid_Charge
    register_type: holding
    address: 130
    bitmask: 1
    entity_category: config
    icon: "mdi:toggle-switch"
 
  - platform: modbus_controller  # Advanced peak shaving and valley filling function enabled
    use_write_multiple: true
    modbus_controller_id: ${modbus_controller_id}
    name: Time of Use 
    id: Time_of_Use
    register_type: holding
    address: 146
    bitmask: 1
    entity_category: config
    icon: "mdi:toggle-switch"
 
  - platform: modbus_controller  # Time point 1 charge enable - grid charging enable
    use_write_multiple: true
    modbus_controller_id: ${modbus_controller_id}
    name: Time point 1 charge enable
    register_type: holding
    address: 172
    bitmask: 1   # 2 hvis man ønsker Gen charging enabel i sted for.
    entity_category: config
    icon: "mdi:toggle-switch"
 
  - platform: modbus_controller  # Time point 2 charge enable - grid charging enable
    use_write_multiple: true
    modbus_controller_id: ${modbus_controller_id}
    name: Time point 2 charge enable
    register_type: holding
    address: 173
    bitmask: 1    # 2 hvis man ønsker Gen charging enabel i sted for.
    entity_category: config
    icon: "mdi:toggle-switch"
 
  - platform: modbus_controller  # Time point 3 charge enable - grid charging enable
    use_write_multiple: true
    modbus_controller_id: ${modbus_controller_id}
    name: Time point 3 charge enable
    register_type: holding
    address: 174
    bitmask: 1    # 2 hvis man ønsker Gen charging enabel i sted for.
    entity_category: config
    icon: "mdi:toggle-switch"
 
  - platform: modbus_controller  # Time point 4 charge enable - grid charging enable
    use_write_multiple: true
    modbus_controller_id: ${modbus_controller_id}
    name: Time point 4 charge enable
    register_type: holding
    address: 175
    bitmask: 1    # 2 hvis man ønsker Gen charging enabel i sted for.
    entity_category: config
    icon: "mdi:toggle-switch"
 
  - platform: modbus_controller  # Time point 5 charge enable - grid charging enable
    use_write_multiple: true
    modbus_controller_id: ${modbus_controller_id}
    name: Time point 5 charge enable
    register_type: holding
    address: 176
    bitmask: 1    # 2 hvis man ønsker Gen charging enabel i sted for.
    entity_category: config
    icon: "mdi:toggle-switch"
 
  - platform: modbus_controller  # Time point 6 charge enable - grid charging enable
    use_write_multiple: true
    modbus_controller_id: ${modbus_controller_id}
    name: Time point 6 charge enable
    register_type: holding
    address: 177
    bitmask: 1    # 2 hvis man ønsker Gen charging enabel i sted for.
    entity_category: config
    icon: "mdi:toggle-switch"
 
binary_sensor:
   - platform: modbus_controller
     modbus_controller_id: ${modbus_controller_id}
     name: AC INV relay # bit 0
     id: AC_INV_relay
     register_type: holding
     address: 552
     bitmask: 0x1
 
   - platform: modbus_controller
     modbus_controller_id: ${modbus_controller_id}
     name: AC Load relay Reserved # bit 1
     id: AC_Load_relay_Reserved
     register_type: holding
     address: 552
     bitmask: 0x2
 
   - platform: modbus_controller
     modbus_controller_id: ${modbus_controller_id}
     name: AC grid relay # bit 2
     id: AC_grid_relay
     register_type: holding
     address: 552
     bitmask: 0x4
 
   - platform: modbus_controller
     modbus_controller_id: ${modbus_controller_id}
     name: AC Generator relay # bit 3
     id: AC_Generator_relay
     register_type: holding
     address: 552
     bitmask: 0x8
 
   - platform: modbus_controller
     modbus_controller_id: ${modbus_controller_id}
     name: Turn off/on status   #The lower 4 bits represent the switch signal
     id: Turn_off_on_status
     register_type: holding
     address: 551
     bitmask: 0x1
 
text_sensor:
   - platform: modbus_controller
     modbus_controller_id: ${modbus_controller_id}
     id: Running_Status
     bitmask: 0
     register_type: holding
     address: 500
     raw_encode: HEXBYTES
     name: Running Status
     lambda: |-
       uint16_t value = modbus_controller::word_from_hex_str(x, 0);
       switch (value) {
         case 0: return std::string("standby");
         case 1: return std::string("selfcheck");
         case 2: return std::string("normal");
         case 3: return std::string("alarm");
         case 4: return std::string("fault");
         default: return std::string("----");
       }
       return x;

select:
  - platform: modbus_controller
    use_write_multiple: true
    modbus_controller_id: ${modbus_controller_id}
    name: "Limit control mode"
    id: limit_control_mode
    address: 142
    # address: 500
    value_type: U_WORD
    optionsmap:
      "Allow Export": 0
      # "Essentials": 1
      "Zero Export": 2

  - platform: modbus_controller
    use_write_multiple: true
    modbus_controller_id: ${modbus_controller_id}
    id: Time_point_1_start
    name: "Time point 1 start"
    address: 148
    value_type: U_WORD
    optionsmap:
      "00:00": 0
      "01:00": 100
      "02:00": 200
      "03:00": 300
      "04:00": 400
      "05:00": 500
      "06:00": 600
      "07:00": 700
      "08:00": 800
      "09:00": 900
      "10:00": 1000
      "11:00": 1100
      "12:00": 1200
      "13:00": 1300
      "14:00": 1400
      "15:00": 1500
      "16:00": 1600
      "17:00": 1700
      "18:00": 1800
      "19:00": 1900
      "20:00": 2000
      "21:00": 2100
      "22:00": 2200
      "23:00": 2300
      "24:00": 2400

  - platform: modbus_controller
    use_write_multiple: true
    modbus_controller_id: ${modbus_controller_id}
    id: Time_point_2_start
    name: "Time point 2 start"
    address: 149
    value_type: U_WORD
    optionsmap:
      "00:00": 0
      "01:00": 100
      "02:00": 200
      "03:00": 300
      "04:00": 400
      "05:00": 500
      "06:00": 600
      "07:00": 700
      "08:00": 800
      "09:00": 900
      "10:00": 1000
      "11:00": 1100
      "12:00": 1200
      "13:00": 1300
      "14:00": 1400
      "15:00": 1500
      "16:00": 1600
      "17:00": 1700
      "18:00": 1800
      "19:00": 1900
      "20:00": 2000
      "21:00": 2100
      "22:00": 2200
      "23:00": 2300
      "24:00": 2400

  - platform: modbus_controller
    use_write_multiple: true
    modbus_controller_id: ${modbus_controller_id}
    id: Time_point_3_start
    name: "Time point 3 start"
    address: 150
    value_type: U_WORD
    optionsmap:
      "00:00": 0
      "01:00": 100
      "02:00": 200
      "03:00": 300
      "04:00": 400
      "05:00": 500
      "06:00": 600
      "07:00": 700
      "08:00": 800
      "09:00": 900
      "10:00": 1000
      "11:00": 1100
      "12:00": 1200
      "13:00": 1300
      "14:00": 1400
      "15:00": 1500
      "16:00": 1600
      "17:00": 1700
      "18:00": 1800
      "19:00": 1900
      "20:00": 2000
      "21:00": 2100
      "22:00": 2200
      "23:00": 2300
      "24:00": 2400

  - platform: modbus_controller
    use_write_multiple: true
    modbus_controller_id: ${modbus_controller_id}
    id: Time_point_4_start
    name: "Time point 4 start"
    address: 151
    value_type: U_WORD
    optionsmap:
      "00:00": 0
      "01:00": 100
      "02:00": 200
      "03:00": 300
      "04:00": 400
      "05:00": 500
      "06:00": 600
      "07:00": 700
      "08:00": 800
      "09:00": 900
      "10:00": 1000
      "11:00": 1100
      "12:00": 1200
      "13:00": 1300
      "14:00": 1400
      "15:00": 1500
      "16:00": 1600
      "17:00": 1700
      "18:00": 1800
      "19:00": 1900
      "20:00": 2000
      "21:00": 2100
      "22:00": 2200
      "23:00": 2300
      "24:00": 2400

  - platform: modbus_controller
    use_write_multiple: true
    modbus_controller_id: ${modbus_controller_id}
    id: Time_point_5_start
    name: "Time point 5 start"
    address: 152
    value_type: U_WORD
    optionsmap:
      "00:00": 0
      "01:00": 100
      "02:00": 200
      "03:00": 300
      "04:00": 400
      "05:00": 500
      "06:00": 600
      "07:00": 700
      "08:00": 800
      "09:00": 900
      "10:00": 1000
      "11:00": 1100
      "12:00": 1200
      "13:00": 1300
      "14:00": 1400
      "15:00": 1500
      "16:00": 1600
      "17:00": 1700
      "18:00": 1800
      "19:00": 1900
      "20:00": 2000
      "21:00": 2100
      "22:00": 2200
      "23:00": 2300
      "24:00": 2400

  - platform: modbus_controller
    use_write_multiple: true
    modbus_controller_id: ${modbus_controller_id}
    id: Time_point_6_start
    name: "Time point 6 start"
    address: 153
    value_type: U_WORD
    optionsmap:
      "00:00": 0
      "01:00": 100
      "02:00": 200
      "03:00": 300
      "04:00": 400
      "05:00": 500
      "06:00": 600
      "07:00": 700
      "08:00": 800
      "09:00": 900
      "10:00": 1000
      "11:00": 1100
      "12:00": 1200
      "13:00": 1300
      "14:00": 1400
      "15:00": 1500
      "16:00": 1600
      "17:00": 1700
      "18:00": 1800
      "19:00": 1900
      "20:00": 2000
      "21:00": 2100
      "22:00": 2200
      "23:00": 2300
      "24:00": 2400

number:
  - platform: modbus_controller
    use_write_multiple: true
    modbus_controller_id: ${modbus_controller_id}
    id: Maximum_battery_charge_current
    name: "Maximum battery charge current"
    address: 108
    step: 1
    unit_of_measurement: A
    min_value: 1
    max_value: 100    
    mode: slider
    value_type: U_WORD
    
  - platform: modbus_controller
    use_write_multiple: true
    modbus_controller_id: ${modbus_controller_id}
    id: Maximum_battery_discharge_current
    name: "Maximum battery discharge current"
    address: 109
    step: 1
    unit_of_measurement: A
    min_value: 1
    max_value: 100    
    mode: slider
    value_type: U_WORD

  - platform: modbus_controller
    use_write_multiple: true
    modbus_controller_id: ${modbus_controller_id}
    id: Maximum_battery_grid_charge_current
    name: "Maximum battery_grid charge current"
    address: 128
    step: 1
    unit_of_measurement: A
    min_value: 1
    max_value: 100    
    mode: slider
    value_type: U_WORD

  # - platform: modbus_controller
  #   use_write_multiple: true
  #   modbus_controller_id: ${modbus_controller_id}
  #   id: Time_point_1
  #   name: "Time point 1 start"
  #   min_value: 0
  #   max_value: 2400
  #   step: 100
  #   address: 148
  #   value_type: U_WORD   

  # - platform: modbus_controller
  #   use_write_multiple: true
  #   modbus_controller_id: ${modbus_controller_id}
  #   id: Time_point_1_new
  #   name: "Time point 1 new"
  #   min_value: 0
  #   max_value: 24
  #   step: 0.01
  #   address: 148
  #   lambda: "return  x * 0.01;"
  #   write_lambda: "return  x * 100;"
  #   value_type: U_WORD      
  
  # - platform: modbus_controller
  #   use_write_multiple: true
  #   modbus_controller_id: ${modbus_controller_id}
  #   id: Time_point_2
  #   name: "Time point 2 start"
  #   min_value: 0
  #   max_value: 2400
  #   step: 100
  #   address: 149
  #   value_type: U_WORD
    
  # - platform: modbus_controller
  #   use_write_multiple: true
  #   modbus_controller_id: ${modbus_controller_id}
  #   id: Time_point_3
  #   name: "Time point 3 start"
  #   min_value: 0
  #   max_value: 2400
  #   step: 100
  #   address: 150
  #   value_type: U_WORD
    
  # - platform: modbus_controller
  #   use_write_multiple: true
  #   modbus_controller_id: ${modbus_controller_id}
  #   id: Time_point_4
  #   name: "Time point 4 start"
  #   min_value: 0
  #   max_value: 2400
  #   step: 100
  #   address: 151
  #   value_type: U_WORD
    
  # - platform: modbus_controller
  #   use_write_multiple: true
  #   modbus_controller_id: ${modbus_controller_id}
  #   id: Time_point_5
  #   name: "Time point 5 start"
  #   min_value: 0
  #   max_value: 2400
  #   step: 100
  #   address: 152
  #   value_type: U_WORD
    
  # - platform: modbus_controller
  #   use_write_multiple: true
  #   modbus_controller_id: ${modbus_controller_id}
  #   id: Time_point_6
  #   name: "Time point 6 start"
  #   min_value: 0
  #   max_value: 2400
  #   step: 100
  #   address: 153
  #   value_type: U_WORD
    
  - platform: modbus_controller
    use_write_multiple: true
    modbus_controller_id: ${modbus_controller_id}
    id: Time_point_1_power
    name: "Time point 1 power"
    unit_of_measurement: W
    min_value: 0
    max_value: 8000
    step: 100
    mode: slider
    address: 154
    value_type: U_WORD
    
  - platform: modbus_controller
    use_write_multiple: true
    modbus_controller_id: ${modbus_controller_id}
    id: Time_point_2_power
    name: "Time point 2 power"
    unit_of_measurement: W
    min_value: 0
    max_value: 8000
    step: 100
    address: 155
    value_type: U_WORD
    
  - platform: modbus_controller
    use_write_multiple: true
    modbus_controller_id: ${modbus_controller_id}
    id: Time_point_3_power
    name: "Time point 3 power"
    unit_of_measurement: W
    min_value: 0
    max_value: 8000
    step: 100
    address: 156
    value_type: U_WORD
    
  - platform: modbus_controller
    use_write_multiple: true
    modbus_controller_id: ${modbus_controller_id}
    id: Time_point_4_power
    name: "Time point 4 power"
    unit_of_measurement: W
    min_value: 0
    max_value: 8000
    step: 100
    address: 157
    value_type: U_WORD
    
  - platform: modbus_controller
    use_write_multiple: true
    modbus_controller_id: ${modbus_controller_id}
    id: Time_point_5_power
    name: "Time point 5 power"
    unit_of_measurement: W
    min_value: 0
    max_value: 8000
    step: 100
    address: 158
    value_type: U_WORD
    
  - platform: modbus_controller
    use_write_multiple: true
    modbus_controller_id: ${modbus_controller_id}
    id: Time_point_6_power
    name: "Time point 6 power"
    unit_of_measurement: W
    min_value: 0
    max_value: 8000
    step: 100
    address: 159
    value_type: U_WORD

  - platform: modbus_controller
    use_write_multiple: true
    modbus_controller_id: ${modbus_controller_id}
    id: Time_point_1_voltage
    name: "Time point 1 voltage"
    unit_of_measurement: "V"
    address: 160
    min_value: 49
    max_value: 55.5
    step: 0.1
    lambda: "return  x * 0.01;"
    write_lambda: "return  x * 100;"
    value_type: U_WORD   

  - platform: modbus_controller
    use_write_multiple: true
    modbus_controller_id: ${modbus_controller_id}
    id: Time_point_2_voltage
    name: "Time point 2 voltage"
    unit_of_measurement: "V"
    address: 161
    min_value: 49
    max_value: 55.5
    step: 0.1
    lambda: "return  x * 0.01;"
    write_lambda: "return  x * 100;"
    value_type: U_WORD   

  - platform: modbus_controller
    use_write_multiple: true
    modbus_controller_id: ${modbus_controller_id}
    id: Time_point_3_voltage
    name: "Time point 3 voltage"
    unit_of_measurement: "V"
    address: 162
    min_value: 49
    max_value: 55.5
    step: 0.1
    lambda: "return  x * 0.01;"
    write_lambda: "return  x * 100;"
    value_type: U_WORD   

  - platform: modbus_controller
    use_write_multiple: true
    modbus_controller_id: ${modbus_controller_id}
    id: Time_point_4_voltage
    name: "Time point 4 voltage"
    unit_of_measurement: "V"
    address: 163
    min_value: 49
    max_value: 55.5
    step: 0.1
    lambda: "return  x * 0.01;"
    write_lambda: "return  x * 100;"
    value_type: U_WORD   

  - platform: modbus_controller
    use_write_multiple: true
    modbus_controller_id: ${modbus_controller_id}
    id: Time_point_5_voltage
    name: "Time point 5 voltage"
    unit_of_measurement: "V"
    address: 164
    min_value: 49
    max_value: 55.5
    step: 0.1
    lambda: "return  x * 0.01;"
    write_lambda: "return  x * 100;"
    value_type: U_WORD   

  - platform: modbus_controller
    use_write_multiple: true
    modbus_controller_id: ${modbus_controller_id}
    id: Time_point_6_voltage
    name: "Time point 6 voltage"
    unit_of_measurement: "V"
    address: 165
    min_value: 49
    max_value: 55.5
    step: 0.1
    lambda: "return  x * 0.01;"
    write_lambda: "return  x * 100;"
    value_type: U_WORD   

  # - platform: modbus_controller
  #   use_write_multiple: true
  #   modbus_controller_id: ${modbus_controller_id}
  #   id: Time_point_1_capacity
  #   name: "Time point 1 capacity"
  #   unit_of_measurement: "%"
  #   address: 166
  #   min_value: 0
  #   max_value: 100
  #   step: 5
  #   value_type: U_WORD
    
  # - platform: modbus_controller
  #   use_write_multiple: true
  #   modbus_controller_id: ${modbus_controller_id}
  #   id: Time_point_2_capacity
  #   name: "Time point 2 capacity"
  #   unit_of_measurement: "%"
  #   address: 167
  #   min_value: 0
  #   max_value: 100
  #   step: 5
  #   value_type: U_WORD
    
  # - platform: modbus_controller
  #   use_write_multiple: true
  #   modbus_controller_id: ${modbus_controller_id}
  #   id: Time_point_3_capacity
  #   name: "Time point 3 capacity"
  #   unit_of_measurement: "%"
  #   address: 168
  #   min_value: 0
  #   max_value: 100
  #   step: 5
  #   value_type: U_WORD
    
  # - platform: modbus_controller
  #   use_write_multiple: true
  #   modbus_controller_id: ${modbus_controller_id}
  #   id: Time_point_4_capacity
  #   name: "Time point 4 capacity"
  #   unit_of_measurement: "%"
  #   address: 169
  #   min_value: 0
  #   max_value: 100
  #   step: 5
  #   value_type: U_WORD
    
  # - platform: modbus_controller
  #   use_write_multiple: true
  #   modbus_controller_id: ${modbus_controller_id}
  #   id: Time_point_5_capacity
  #   name: "Time point 5 capacity"
  #   unit_of_measurement: "%"
  #   address: 170
  #   min_value: 0
  #   max_value: 100
  #   step: 5
  #   value_type: U_WORD
    
  # - platform: modbus_controller
  #   use_write_multiple: true
  #   modbus_controller_id: ${modbus_controller_id}
  #   id: Time_point_6_capacity
  #   name: "Time point 6 capacity"
  #   unit_of_measurement: "%"
  #   address: 171
  #   min_value: 0
  #   max_value: 100
  #   value_type: U_WORD

sensor:
  - platform: modbus_controller #køleplade temeratur
    modbus_controller_id: ${modbus_controller_id}
    name: "Heat sink temperature"
    id: koleplade_temeratur
    register_type: holding
    address: 541
    unit_of_measurement: "°C"
    value_type: S_WORD
    accuracy_decimals: 2
    filters:
      - offset: -1000
      - multiply:  0.1
 
  # - platform: modbus_controller #load frequency
  #   modbus_controller_id: ${modbus_controller_id}
  #   name: "load frequency"
  #   id: load_frequency
  #   register_type: holding
  #   address: 655
  #   unit_of_measurement: "Hz"
  #   state_class: "measurement"
  #   accuracy_decimals: 2
  #   filters:
  #     - multiply: 0.01
  #   value_type: U_WORD
 
  # - platform: modbus_controller #inverter-frequency
  #   modbus_controller_id: ${modbus_controller_id}
  #   name: "inverter-frequency"
  #   id: inverter_frequency
  #   register_type: holding
  #   address: 638
  #   unit_of_measurement: "Hz"
  #   state_class: "measurement"
  #   accuracy_decimals: 2
  #   filters:
  #     - multiply: 0.01
  #   value_type: U_WORD
 
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "PV1 Power"
    id: PV1_Power
    register_type: holding
    address: 672
    unit_of_measurement: "W"
    state_class: "measurement"
    accuracy_decimals: 0
    value_type: U_WORD
 
  # - platform: modbus_controller
  #   modbus_controller_id: ${modbus_controller_id}
  #   name: "PV2 Power"
  #   id: PV2_Power
  #   register_type: holding
  #   address: 673
  #   unit_of_measurement: "W"
  #   state_class: "measurement"
  #   accuracy_decimals: 0
  #   value_type: U_WORD
 
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "PV1 Voltage"
    id: PV1_Voltage
    register_type: holding
    address: 676
    unit_of_measurement: "V"
    state_class: "measurement"
    accuracy_decimals: 0
    filters:
      - multiply: 0.1
    value_type: U_WORD
 
  # - platform: modbus_controller
  #   modbus_controller_id: ${modbus_controller_id}
  #   name: "PV2 Voltage"
  #   id: PV2_Voltage
  #   register_type: holding
  #   address: 678
  #   unit_of_measurement: "V"
  #   state_class: "measurement"
  #   accuracy_decimals: 0
  #   filters:
  #     - multiply: 0.1
  #   value_type: U_WORD
 
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "PV1 Current"
    id: PV1_Current
    register_type: holding
    address: 677
    unit_of_measurement: "A"
    state_class: "measurement"
    accuracy_decimals: 1
    filters:
      - multiply: 0.1
    value_type: U_WORD
 
  # - platform: modbus_controller
  #   modbus_controller_id: ${modbus_controller_id}
  #   name: "PV2 Current"
  #   id: PV2_Current
  #   register_type: holding
  #   address: 679
  #   unit_of_measurement: "A"
  #   state_class: "measurement"
  #   accuracy_decimals: 1
  #   filters:
  #     - multiply: 0.1
  #   value_type: U_WORD  
 
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "Daily Production"
    id: Daily_Production
    register_type: holding
    address: 529
    unit_of_measurement: "kWh"
    state_class: "total_increasing"
    device_class: energy
    accuracy_decimals: 1
    filters:
      - multiply: 0.1
    value_type: U_WORD  
 
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "Total PV Production"  #Cumulative Production 
    id: Total_PV_Production
    register_type: holding
    address: 534
    unit_of_measurement: "kWh"
    state_class: "total_increasing"
    device_class: energy
    accuracy_decimals: 1
    value_type: U_DWORD_R
    filters:
      - multiply: 0.1
 
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "Total Grid Power"   # Grid side total power
    id: Total_Grid_Power
    register_type: holding
    address: 625
    unit_of_measurement: "W"
    state_class: "measurement"
    accuracy_decimals: 0
    value_type: S_WORD
 
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "Daily Energy Bought"
    id: Daily_Energy_Bought
    register_type: holding
    address: 520
    unit_of_measurement: "kWh"
    state_class: "total_increasing"
    device_class: energy
    accuracy_decimals: 1
    value_type: U_WORD
    filters:
      - multiply: 0.1
 
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "Daily Energy Sold"
    id: Daily_Energy_Sold
    register_type: holding
    address: 521
    unit_of_measurement: "kWh"
    state_class: "total_increasing"
    device_class: energy
    accuracy_decimals: 1
    value_type: U_WORD
    filters:
      - multiply: 0.1
 
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "Total Energy Bought"
    id: Total_Energy_Bought
    register_type: holding
    address: 522
    unit_of_measurement: "kWh"
    state_class: "total_increasing"
    device_class: energy
    accuracy_decimals: 1
    value_type: U_WORD
    filters:
      - multiply: 0.1
 
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "Total Energy Sold"
    id: Total_Energy_Sold
    register_type: holding
    address: 524
    unit_of_measurement: "kWh"
    state_class: "total_increasing"
    device_class: energy
    accuracy_decimals: 1
    value_type: U_WORD
    filters:
      - multiply: 0.1
 
  - platform: modbus_controller #Total Consumption
    modbus_controller_id: ${modbus_controller_id}
    name: "Total Consumption"
    id: Total_Consumption
    register_type: holding
    address: 527
    unit_of_measurement: "kWh"
    state_class: "total_increasing"
    device_class: energy
    accuracy_decimals: 2
    value_type: U_DWORD_R
    filters:
      - multiply: 0.1
 
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "active power generation of today"
    id: active_power_generation_of_today
    register_type: holding
    address: 502
    unit_of_measurement: "kWh"
    state_class: "total_increasing"
    device_class: energy
    accuracy_decimals: 1
    value_type: S_WORD
    filters:
      - multiply: 0.1
 
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "Grid Current L1"
    id: Grid_Current_L1
    register_type: holding
    address: 630
    unit_of_measurement: "A"
    state_class: "measurement"
    accuracy_decimals: 1
    filters:
      - multiply: 0.01
    value_type: S_WORD  
 
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "Grid Current L2"
    id: Grid_Current_L2
    register_type: holding
    address: 631
    unit_of_measurement: "A"
    state_class: "measurement"
    accuracy_decimals: 1
    filters:
      - multiply: 0.01
    value_type: S_WORD   
 
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "Grid Current L3"
    id: Grid_Current_L3
    register_type: holding
    address: 632
    unit_of_measurement: "A"
    state_class: "measurement"
    accuracy_decimals: 1
    filters:
      - multiply: 0.01
    value_type: S_WORD   
 
  # - platform: modbus_controller
  #   modbus_controller_id: ${modbus_controller_id}
  #   name: "Grid Voltage L1"
  #   id: Grid_Voltage_L1
  #   register_type: holding
  #   address: 598
  #   unit_of_measurement: "V"
  #   state_class: "measurement"
  #   accuracy_decimals: 0
  #   filters:
  #     - multiply: 0.1
  #   value_type: U_WORD     
 
  # - platform: modbus_controller
  #   modbus_controller_id: ${modbus_controller_id}
  #   name: "Grid Voltage L2"
  #   id: Grid_Voltage_L2
  #   register_type: holding
  #   address: 599
  #   unit_of_measurement: "V"
  #   state_class: "measurement"
  #   accuracy_decimals: 0
  #   filters:
  #     - multiply: 0.1
  #   value_type: U_WORD     
 
  # - platform: modbus_controller
  #   modbus_controller_id: ${modbus_controller_id}
  #   name: "Grid Voltage L3"
  #   id: Grid_Voltage_L3
  #   register_type: holding
  #   address: 600
  #   unit_of_measurement: "V"
  #   state_class: "measurement"
  #   accuracy_decimals: 0
  #   filters:
  #     - multiply: 0.1
  #   value_type: U_WORD  

 
  # - platform: modbus_controller
  #   modbus_controller_id: ${modbus_controller_id}
  #   name: "Internal CT L1 Power"
  #   id: Internal_CT_L1_Power
  #   register_type: holding
  #   address: 604
  #   unit_of_measurement: "W"
  #   state_class: "measurement"
  #   accuracy_decimals: 0
  #   value_type: S_WORD  
 
  # - platform: modbus_controller
  #   modbus_controller_id: ${modbus_controller_id}
  #   name: "Internal CT L2 Power"
  #   id: Internal_CT_L2_Power
  #   register_type: holding
  #   address: 605
  #   unit_of_measurement: "W"
  #   state_class: "measurement"
  #   accuracy_decimals: 0
  #   value_type: S_WORD  
 
  # - platform: modbus_controller
  #   modbus_controller_id: ${modbus_controller_id}
  #   name: "Internal CT L3 Power"
  #   id: Internal_CT_L3_Power
  #   register_type: holding
  #   address: 606
  #   unit_of_measurement: "W"
  #   state_class: "measurement"
  #   accuracy_decimals: 0
  #   value_type: S_WORD  
 
  # - platform: modbus_controller  # Grid internal - total active power
  #   modbus_controller_id: ${modbus_controller_id}
  #   name: "Internal total Power" 
  #   id: Internal_total_Power
  #   register_type: holding
  #   address: 607
  #   unit_of_measurement: "W"
  #   state_class: "measurement"
  #   accuracy_decimals: 0
  #   value_type: S_WORD   
 
  # - platform: modbus_controller
  #   modbus_controller_id: ${modbus_controller_id}
  #   name: "External CT L1 Power"
  #   id: External_CT_L1_Power
  #   register_type: holding
  #   address: 616
  #   unit_of_measurement: "W"
  #   state_class: "measurement"
  #   accuracy_decimals: 0
  #   value_type: S_WORD  
 
  # - platform: modbus_controller
  #   modbus_controller_id: ${modbus_controller_id}
  #   name: "External CT L2 Power"
  #   id: External_CT_L2_Power
  #   register_type: holding
  #   address: 617
  #   unit_of_measurement: "W"
  #   state_class: "measurement"
  #   accuracy_decimals: 0
  #   value_type: S_WORD  
 
  # - platform: modbus_controller
  #   modbus_controller_id: ${modbus_controller_id}
  #   name: "External CT L3 Power"
  #   id: External_CT_L3_Power
  #   register_type: holding
  #   address: 618
  #   unit_of_measurement: "W"
  #   state_class: "measurement"
  #   accuracy_decimals: 0
  #   value_type: S_WORD     
 
  # - platform: modbus_controller  
  #   modbus_controller_id: ${modbus_controller_id}
  #   name: "Out-of-grid–total power"
  #   id: out_of_grid_total_power
  #   register_type: holding
  #   address: 619
  #   unit_of_measurement: "W"
  #   state_class: "measurement"
  #   accuracy_decimals: 0
  #   value_type: S_WORD
    
  # - platform: modbus_controller # Load totalpower
  #   modbus_controller_id: ${modbus_controller_id}
  #   name: "Load totalpower" 
  #   id: Load_totalpower
  #   register_type: holding
  #   address: 653
  #   unit_of_measurement: "W"
  #   state_class: "measurement"
  #   accuracy_decimals: 0
  #   value_type: S_WORD
 
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "Warning1"
    id:  Warning1
    register_type: holding
    address: 553
    accuracy_decimals: 0
    value_type: U_WORD
 
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "Warning2"
    id:  Warning2
    register_type: holding
    address: 554
    accuracy_decimals: 0
    value_type: U_WORD
 
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "Warning3"
    id:  Warning3
    register_type: holding
    address: 555
    accuracy_decimals: 0
    value_type: U_WORD
 
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "Error1"
    id:  Error1
    register_type: holding
    address: 556
    accuracy_decimals: 0
    value_type: U_WORD
 
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "Error2"
    id:  Error2
    register_type: holding
    address: 557
    accuracy_decimals: 0
    value_type: U_WORD
 
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "Error3"
    id:  Error3
    register_type: holding
    address: 558
    accuracy_decimals: 0
    value_type: U_WORD
 
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "Failure status of communication board"
    id:  Failure_status_of_communication_board
    register_type: holding
    address: 548
    accuracy_decimals: 0
    value_type: U_WORD
 
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "Minimum insulation impedance"
    id:  Minimum_insulation_impedance
    register_type: holding
    unit_of_measurement: "kΩ"
    state_class: "measurement"
    address: 65
    accuracy_decimals: 0
    value_type: U_WORD
    filters:
      - multiply: 0.1
 
  # Batteri
 
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "Today charge of the battery"
    id:  Today_charge_of_the_battery
    register_type: holding
    address: 514
    unit_of_measurement: "kWh"
    state_class: "total_increasing"
    device_class: energy
    accuracy_decimals: 1
    value_type: U_WORD
    filters:
      - multiply: 0.1
 
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "Today discharge of the battery"
    id:  Today_discharge_of_the_battery
    register_type: holding
    address: 515
    unit_of_measurement: "kWh"
    state_class: "total_increasing"
    device_class: energy
    accuracy_decimals: 1
    value_type: U_WORD
    filters:
      - multiply: 0.1
 
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "Total charge of the battery"
    id:  battery_total_charge
    register_type: holding
    address: 516
    unit_of_measurement: "kWh"
    state_class: "total_increasing"
    device_class: energy
    accuracy_decimals: 1
    value_type: U_DWORD_R
    filters:
      - multiply: 0.1
 
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "Total discharge of the battery"
    id:  battery_total_discharge
    register_type: holding
    address: 518
    unit_of_measurement: "kWh"
    state_class: "total_increasing"
    device_class: energy
    accuracy_decimals: 1
    value_type: U_DWORD_R 
    filters:
      - multiply: 0.1
 
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "battery temperature"
    id:  battery_temperature
    register_type: holding
    address: 586
    unit_of_measurement: "°C"
    accuracy_decimals: 1
    value_type: U_WORD 
    filters:
      - offset: -1000
      - multiply: 0.1
 
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "battery voltage"
    id: battery_voltage
    register_type: holding
    address: 587  
    unit_of_measurement: "V"
    state_class: "measurement"
    accuracy_decimals: 2
    filters:
      - multiply: 0.01
    value_type: U_WORD
 
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "battery capacity"
    id: battery_capacity
    register_type: holding
    address: 588
    unit_of_measurement: "%"
    state_class: "measurement"
    accuracy_decimals: 1
    value_type: U_WORD
 
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "Battery output power"
    id: Battery_output_power
    register_type: holding
    address: 590
    unit_of_measurement: "W"
    state_class: "measurement"
    accuracy_decimals: 0
    value_type: S_WORD 
 
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "Battery output current"
    id: Battery_output_current
    register_type: holding
    address: 591
    unit_of_measurement: "A"
    state_class: "measurement"
    accuracy_decimals: 2
    filters:
      - multiply: 0.01
    value_type: S_WORD
 
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "The corrected capacity of the battery"
    id: The_corrected_capacity_of_the_battery
    register_type: holding
    address: 592
    unit_of_measurement: "Ah"
    state_class: "measurement"
    accuracy_decimals: 0
    value_type: U_WORD