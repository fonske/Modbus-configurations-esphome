substitutions:
  name: sdm120
  device_description: "2x SDM120 modbus on Atom S3 lite base RS485"
  friendly_name: SDM

esphome:
  name: ${name}
  friendly_name: ${friendly_name}
  comment: Eastron SDM 120 2x
  on_boot:
    priority: 200
    then:
      - delay: 30s
      - switch.turn_off:
          id: led_switch

#  RS485 base with Atom S3 lite
esp32:
  board: esp32-s3-devkitc-1
  framework:
    type: arduino
    version: latest

# Enable/Disable logging
logger:
  logs:
    modbus_controller.sensor: DEBUG
    modbus_controller.output: DEBUG
    modbus.number: DEBUG
    esp32.preferences: DEBUG
    sensor: DEBUG
    text_sensor: DEBUG
    button: DEBUG
    number: DEBUG
    component: ERROR

# Enable Home Assistant API
api:
  reboot_timeout: 0s

# Enable Over The Air updates  
ota:
#  password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

# Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${name}"
    password: "configesp"
    
captive_portal:
    
web_server:
  port: 80

# i2c for extra sensor
i2c:
  - id: bus_a
    sda: GPIO2
    scl: GPIO1

# uart for modbus rtu
uart:
  id: mod_bus
  baud_rate: 9600
  stop_bits: 1
  parity: none
  tx_pin: GPIO6
  rx_pin: GPIO5

modbus:
  id: modbus1
  send_wait_time: 200ms

#### 2x EASTRON SDM120 Single phase kWh meter
modbus_controller:
  - id: SDM1
    ## SDM120 meter slaveadress 2 ???
    address: 2
    modbus_id: modbus1
    setup_priority: -10
    update_interval: 10s
    ## change parity to none on the SDM120 meter. Baudrate to 9600
  - id: SDM2
    ## SDM120 meter slaveadress 3 ???
    address: 3
    modbus_id: modbus1
    setup_priority: -10
    update_interval: 10s
    ## change parity to none on the SDM120 meter. Baudrate to 9600

sensor:
    ## Power1
  - platform: modbus_controller
    modbus_controller_id: SDM1
    name: SDM1 Power
    register_type: read
    address: 12
    value_type: FP32
    unit_of_measurement: W
    state_class: measurement
    device_class: power
    accuracy_decimals: 0
    filters:
      - multiply: 1

    ## Voltage1
  - platform: modbus_controller
    modbus_controller_id: SDM1
    name: SDM1 Voltage
    register_type: read
    address: 0
    value_type: FP32
    unit_of_measurement: V
    state_class: measurement
    device_class: voltage
    accuracy_decimals: 0
    filters:
      - multiply: 1

    ## Current1
  - platform: modbus_controller
    modbus_controller_id: SDM1
    name: SDM1 Current
    register_type: read
    address: 6
    value_type: FP32
    unit_of_measurement: A
    state_class: measurement
    device_class: current
    accuracy_decimals: 2
    filters:
      - multiply: 1

    ## Energy1
  - platform: modbus_controller
    modbus_controller_id: SDM1
    name: SDM1 Total Energy
    register_type: read
    address: 342
    value_type: FP32
    unit_of_measurement: kWh
    state_class: total_increasing
    device_class: energy
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

    ## Power2
  - platform: modbus_controller
    modbus_controller_id: SDM2
    name: SDM2 Power
    register_type: read
    address: 12
    value_type: FP32
    unit_of_measurement: W
    state_class: measurement
    device_class: power
    accuracy_decimals: 0
    filters:
      - multiply: 1

    ## Voltage2
  - platform: modbus_controller
    modbus_controller_id: SDM2
    name: SDM2 Voltage
    register_type: read
    address: 0
    value_type: FP32
    unit_of_measurement: V
    state_class: measurement
    device_class: voltage
    accuracy_decimals: 0
    filters:
      - multiply: 1

    ## Current2
  - platform: modbus_controller
    modbus_controller_id: SDM2
    name: SDM2 Current
    register_type: read
    address: 6
    value_type: FP32
    unit_of_measurement: A
    state_class: measurement
    device_class: current
    accuracy_decimals: 2
    filters:
      - multiply: 1

    ## Energy2
  - platform: modbus_controller
    modbus_controller_id: SDM2
    name: SDM2 Total Energy
    register_type: read
    address: 342
    value_type: FP32
    unit_of_measurement: kWh
    state_class: total_increasing
    device_class: energy
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  - platform: internal_temperature
    name: Internal esp temperature 
    entity_category: diagnostic

###  ESP restart button
button:
  - platform: restart
    id: restart_button
    name: Restart button

number:
    ## Set led brightness
  - platform: template
    id: led_brightness
    name: led_brightness
    icon: mdi:toggle-switch-variant
    mode: slider
    entity_category: config
    optimistic: true
    min_value: 0
    max_value: 100
    step: 10
    initial_value: 70
    restore_value: yes
    unit_of_measurement: "%"
    on_value:
      then:
        - if:
            condition:
              - light.is_on: led
            then:
            - light.turn_on:
                id: led
                brightness: !lambda |-
                  // output value must be in range 0 - 1.0
                  return id(led_brightness).state / 100.0;

switch:
  - platform: template
    id: led_switch
    name: led_switch
    optimistic: true
    restore_mode: RESTORE_DEFAULT_ON 
    lambda: return id(led_switch).state;
    turn_on_action:
      - light.turn_on:
          id: led
          brightness: !lambda |-
            // output value must be in range 0 - 1.0
            return id(led_brightness).state / 100.0;
    turn_off_action:
      - light.turn_off:
          id: led

light:
#G35=RGB WS2812C-2020
  - platform: esp32_rmt_led_strip
    name: Led
    id: led
    internal: true
    rgb_order: GRB
    pin: 35
    num_leds: 4
    # RMT 0 channels will be occupied by IR
    rmt_channel: 1
    chipset: ws2812
    restore_mode: ALWAYS_ON  #OFF?

#G41=Button
binary_sensor:
  - platform: gpio
    name: Buttonw
    id: g41button
    pin:
      number: GPIO41
      inverted: true
      mode:
        input: true
        pullup: true
    internal: true
    filters:
      - delayed_off: 10ms
    # Toggle the switch when the pushbutton is pressed
    on_press:
      then:
        - switch.toggle: led_switch
