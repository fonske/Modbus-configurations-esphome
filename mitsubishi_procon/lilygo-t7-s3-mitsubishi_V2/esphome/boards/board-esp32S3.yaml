### ESP32S3 used is a LILYGO ESP32S3-T7  (tindie.com)
### The modbus TTL to RS485 interface used is a XY-017  (RS3485). No flow control needed and 3.3V powersupply

esp32:
  board: adafruit_feather_esp32s3_nopsram
  framework:
    type: arduino

esphome:
  platformio_options:
    board_build.extra_flags:
      - "-DARDUINO_USB_CDC_ON_BOOT=0"

# Modbus uart
uart:
  id: mod_bus
  baud_rate: 9600
  stop_bits: 1
  tx_pin: 16
  rx_pin: 12

# Option for 2x I2C connectors  ***experimental***
# Comment with # if not used.
i2c:  
  - id: bus_a
    sda: 13
    scl: 14
    scan: true

  - id: bus_b
    sda: 10
    scl: 18
    scan: true

## Option for DHT11 or DHT22 on last 3 terminals -/Signal/+ ***experimental***
## Comment with # if not used.
sensor:
## Option for multiple DS18b20 on last 3 terminals -/Signal/+ 
## Comment with # if not used.
## 2x ds18b20: 
#  - platform: dallas
#    address: 0x923c01d075935628  ##find adress in esphome log
#    name: "Temperature 1"
#    id: temperature_1
#    filters:
#    - filter_out: NAN

#  - platform: dallas
#    address: 0x1f3c01d07519cb28  ##find adress in esphome log
#    name: "Temperature 2"
#    id: temperature_2
#    filters:
#    - filter_out: NAN

## Option for DHT11 or DHT22 on last 3 terminals -/Signal/+ 
## Comment with # if not used.
#  - platform: dht
#    model: DHT11
#    pin: 8
#    temperature:
#      name: Temperature
#      id: mitsubishi_temperature
#    humidity:
#      name: Humidity
#      id: mitsubishi_humidity
#    update_interval: 15s
## Option for Relay  ***experimental***
## Comment with # if not used.

switch:
  ## Relay
  - platform: gpio
    pin:
      number: 5
      inverted: false
    name: "Relay"
    id: brink_relay
#    internal: true
    icon: mdi:alarm-bell

# Enable/Disable logging
logger:
  logs:
    modbus_controller.sensor: WARN
    modbus_controller.output: WARN
    modbus.number: WARN
    esp32.preferences: WARN
    sensor: WARN
    text_sensor: WARN
    dht.sensor: WARN
    switch: WARN
    button: WARN
    number: WARN
  # baud_rate: 0  # <--- super important! for ESP8266

wifi:
  ap:
    ssid: "${name}"
    password: "configesp"

captive_portal:

# Enable Web server.
web_server:
  port: 80

# Enable Status LED.
status_led:
  pin:
    number: 17